global:
  backend:
    name: backend
  frontend:
    name: frontend


refarch-gateway:
  envAppend:
  ### Here you see the avaiable config for the apigateway
  ### https://github.com/it-at-m/refarch/tree/main/refarch-gateway#configuration
    - name: SPRING_PROFILES_ACTIVE
      value: no-security    # hazelcast-k8s
    # - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_SSO_CLIENTID
    #   valueFrom:
    #     secretKeyRef:
    #       key: sps-sample-dev
    #       name: sso-client-id
    # - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_SSO_CLIENTSECRET
    #   valueFrom:
    #     secretKeyRef:
    #       key: sps-sample-dev
    #       name: sso-client-secret
    # - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_SSO_PROVIDER
    #   value: 'sso'
    # - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI
    #   value: https://sso.muenchen.de/auth/realms/muenchen.de
    # - name: SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_SSO_ISSUERURI
    #   value: '${spring.security.oauth2.resourceserver.jwt.issuer-uri}'
    # - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_SSO_SCOPE
    #   value: 'profile, openid'
    # - name: ALLOWED_ORIGINS_PUBLIC
    #   value: 'https://*.muenchen.de'
    # - name: ALLOWED_ORIGINS_CLIENTS
    #   value: 'https://*.muenchen.de'
    # - name: INFO_APPSWITCHER_URL
    #   value: 'https://appswitcher.muenchen.de/'

    - name: SPRING_CLOUD_GATEWAY_ROUTES_0_ID
      value: backend
    - name: SPRING_CLOUD_GATEWAY_ROUTES_0_URI
      value: "http://{{ include \"backend.fullname\" . }}:8080/"
    - name: SPRING_CLOUD_GATEWAY_ROUTES_0_PREDICATES_0
      value: Path=/api/beispielprojekt-backend-service/**
    - name: SPRING_CLOUD_GATEWAY_ROUTES_0_FILTERS_0
      value: RewritePath=/api/beispielprojekt-backend-service/(?<urlsegments>.*), /$\{urlsegments}
    - name: SPRING_CLOUD_GATEWAY_ROUTES_0_FILTERS_1
      value: RemoveResponseHeader=WWW-Authenticate

    - name: SPRING_CLOUD_GATEWAY_ROUTES_1_ID
      value: frontend
    - name: SPRING_CLOUD_GATEWAY_ROUTES_1_URI
      value: "http://{{ include \"frontend.fullname\" . }}:8080/"
    - name: SPRING_CLOUD_GATEWAY_ROUTES_1_PREDICATES_0
      value: Path=/**
    - name: SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0
      value: RewritePath=/(?<urlsegments>.*), /$\{urlsegments}
    - name: SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_1
      value: RemoveResponseHeader=WWW-Authenticate

    # KEYCLOAK
    # - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI
    #   value: http://keycloak1-spseval.apps.capk.muenchen.de/realms/myrealm
    # - name: SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUERURI
    #   value: '${spring.security.oauth2.resourceserver.jwt.issuer-uri}'
    # - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENTID
    #   value: myapp
    # - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENTSECRET
    #   value: "testpassword"
    # - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_SCOPE
    #   value: openid

    # APPSWITCHER
    # - name: INFO_APPSWITCHER_URL
    #   value: 'https://appswitcher-spseval.apps.capk.muenchen.de'

## This ingress config is spezific to openshift.
## If you have plain kubernetes, you will need to change the annotations, className.

  ingress:
    enabled: false
    # annotations:
    #   route.openshift.io/termination: "edge"
    # className: openshift-default
    # hosts:
    #   - host: beispiel.muenchen.de
    #     paths:
    #       - path: /
    #         pathType: "ImplementationSpecific"
    #         backend:
    #           serviceName: '{{ include "refarch-gateway.fullname" . }}'
    #           servicePort: 8080

## Truststore
## If you have custome certificates you can add them in secret as truststore.
## The secret you can inject on the right position, so you can override the default truststore.

  # volumeMounts:
  #   - mountPath: /etc/pki/ca-trust/extracted/java
  #     name: cacerts-lhm
  #     readOnly: true
  # volumes:
  #  - name: cacerts-lhm
  #     secret:
  #       defaultMode: 420
  #       secretName: cacerts-lhm
  #       items:
  #         - key: cacerts-lhm
  #           path: cacerts
frontend:
  image:
    repository: ghcr.io/it-at-m/sps/sps-frontend
    tag: "latest"

backend:
  image:
    repository: ghcr.io/it-at-m/sps/sps-backend
    tag: "latest"
  env:
    - name: GC_MAX_METASPACE_SIZE
      value: "200"
    - name: TZ
      value: Europe/Berlin
    - name: SPRING_PROFILES_ACTIVE
      value: no-security    # dev
    # - name: REALM
    #   value: beispielprojekt

    # DATABASE
    # - name: SECURITY_REQUESTLOGGING
    #   value: all
    # - name: SECURITY_USERINFOURI
    #   value: ${sso.url}/auth/realms/${sso.realm}/protocol/openid-connect/userinfo
    # - name: SPRING_DATASOURCE_URL
    #   value: jdbc:postgresql://sps-sample-database:5432/db
    # - name: SPRING_DATASOURCE_USERNAME
    #   value: user
    # - name: SPRING_DATASOURCE_PASSWORD
    #   value: admin
    # - name: SPRING_DATASOURCE_DRIVERCLASSNAME
    #   value: org.postgresql.Driver
    # - name: SPRING_JPA_DATABASEPLATFORM
    #   value: org.hibernate.dialect.PostgreSQLDialect
    # - name: SPRING_JPA_HIBERNATE_DDLAUTO
    #   value: create-drop


## Truststore
## If you have custome certificates you can add them in secret as truststore.
## The secret you can inject on the right position, so you can override the default truststore.

  # volumeMounts:
  #   - mountPath: /etc/pki/ca-trust/extracted/java
  #     name: cacerts-lhm
  #     readOnly: true
  # volumes:
  #  - name: cacerts-lhm
  #     secret:
  #       defaultMode: 420
  #       secretName: cacerts-lhm
  #       items:
  #         - key: cacerts-lhm
  #           path: cacerts


# PostgreSQL
# https://github.com/bitnami/charts/tree/main/bitnami/postgresql
# To deactivate PostgreSQL database set enabled to false
database:
  enabled: false
  auth:
    username: user
    password: admin
    database: db
  primary:
    podSecurityContext:
      fsGroup: null
    containerSecurityContext:
      runAsUser: null
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      seccompProfile: 
        type: RuntimeDefault
      capabilities:
        drop: ["ALL"]
    persistence:
      enabled: false
  volumePermissions:
    enabled: false
  shmVolume:
    enabled: false


# Keycloak
# https://github.com/bitnami/charts/tree/main/bitnami/keycloak
# To deactivate Keycloak set enabled to false
keycloak:
  enabled: false
  auth:
    adminUser: admin
    adminPassword: admin
  extraEnvVars:
    - name: KC_HOSTNAME_STRICT
      value: "false"
    - name: KC_HEALTH_ENABLED
      value: "true"
    - name: KC_HTTP_PORT
      value: "8080"

  postgresql:
    enabled: true
    primary:
      auth:
        username: keycloak-user
        password: admin
        database: keycloak-db
      podSecurityContext:
        fsGroup: null
      containerSecurityContext:
        runAsUser: null
        runAsNonRoot: true
        allowPrivilegeEscalation: false
        seccompProfile: 
          type: RuntimeDefault
        capabilities:
          drop: ["ALL"]
      persistence:
        enabled: false
    volumePermissions:
      enabled: false
    shmVolume:
      enabled: false
  resources: 
    requests:
      cpu: "200m"
      memory: "512Mi"
    limits:
      cpu: "300m"
      memory: "1Gi"
  extraStartupArgs: --import-realm
  extraDeploy:
    - apiVersion: v1
      kind: ConfigMap
      metadata:
        name: keycloak-realm-config
      data:
        realm.json: |
          {
            "id": "myrealm",
            "realm": "myrealm",
            "enabled": true,
            "clients": [
              {
                "clientId": "myapp",
                "name": "${client_myapp}",
                "rootUrl": "${authBaseUrl}",
                "baseUrl": "/realms/myrealm/myapp/",
                "enabled": true,
                "publicClient": true,
                "redirectUris": ["*"]
              }
            ],
            "users": [
              {
                "username": "testuser",
                "enabled": true,
                "credentials": [
                  {
                    "type": "password",
                    "value": "testpassword"
                  }
                ]
              }
            ]
          }
  extraVolumes:
    - name: realm-config
      configMap:
        name: keycloak-realm-config
  extraVolumeMounts:
    - name: realm-config
      mountPath: /opt/bitnami/keycloak/data/import
      readOnly: true


# Appswitcher
# https://github.com/it-at-m/helm-charts/tree/main/charts/appswitcher-server
# To deactivate Appswitcher set enabled to false
appswitcher-server:
  enabled: false
  applications:
    demo-phone-book:
      display-name: Phone book
      url: https://www.gelbeseiten.de/
      image-url: https://i.imgur.com/PA25O7T.png
      tags:
        - global
    google:
      display-name: Google
      url: https://google.com
      image-url: https://www.google.com/favicon.ico
      tags:
        - global
  resources: 
    requests:
      cpu: "200m"
      memory: "512Mi"
    limits:
      cpu: "300m"
      memory: "1Gi"
